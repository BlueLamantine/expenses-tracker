{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","expenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","expenseTitle","expenseAmount","ExpensesList","items","length","map","expense","title","date","amount","id","ChartBar","maxValue","label","barFillHeight","Math","round","style","height","Chart","monthPoints","dataPointValues","monthPoint","totalMaximum","max","ExpensesChart","expenses","chartMonthPoints","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","extanseData","Date","onSaveExpenseDate","type","min","step","onClick","onCancel","NewExpense","isEdit","setIsEdit","enteredData","expenseData","random","onAddExpense","INITIAL_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"sRAMeA,MANf,SAAcC,GACV,OACI,qBAAKC,UAAW,QAAUD,EAAMC,UAAhC,SAA4CD,EAAME,YCiB3CC,EAnBQ,SAAAH,GAIrB,OACE,qBAAKC,UAAU,kBAAf,SACE,sBAAKA,UAAU,+CAAf,UACE,mDACA,yBAAQG,MAAOJ,EAAMK,SAAUC,SAPP,SAAAC,GAC5BP,EAAMQ,eAAeD,EAAME,OAAOL,QAM9B,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,2BCEKM,MAdf,YAAqC,IAAfC,EAAc,EAAdA,YACdC,EAAQD,EAAYE,eAAe,QAAS,CAAED,MAAO,UACrDE,EAAMH,EAAYE,eAAe,QAAS,CAAEC,IAAK,YACjDC,EAAOJ,EAAYK,cAEzB,OACE,sBAAKf,UAAU,yBAAf,UACE,8BAAMW,IACN,8BAAME,IACN,8BAAMC,QCQGE,MAff,YAAoE,IAA7CN,EAA4C,EAA5CA,YAAaO,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,cAKhD,OACE,eAAC,EAAD,CAAMlB,UAAU,mIAAhB,UACE,cAAC,EAAD,CAAaU,YAAaA,IAC1B,sBAAKV,UAAU,uDAAf,UACE,6BAAKiB,IACL,sBAAKjB,UAAU,0BAAf,cAA2CkB,YCSpCC,EAnBM,SAAApB,GACnB,OAA2B,IAAvBA,EAAMqB,MAAMC,OACP,mDAIP,6BACGtB,EAAMqB,MAAME,KAAI,SAAAC,GAAO,OACtB,cAAC,EAAD,CAEEN,aAAcM,EAAQC,MACtBd,YAAaa,EAAQE,KACrBP,cAAeK,EAAQG,QAHlBH,EAAQI,U,OCSRC,G,YAnBE,SAAC,GAAgC,IAA9BzB,EAA6B,EAA7BA,MAAO0B,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC/BC,EAAgB,KAKpB,OAJIF,EAAW,IACbE,EAAgBC,KAAKC,MAAO9B,EAAQ0B,EAAY,KAAO,KAIvD,sBAAK7B,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBACEA,UAAU,kBACVkC,MAAO,CAAEC,OAAQJ,OAGrB,qBAAK/B,UAAU,mBAAf,SAAmC8B,SCM1BM,EAlBD,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACTC,EAAkBD,EAAYf,KAAI,SAAAiB,GAAU,OAAIA,EAAWpC,SAC3DqC,EAAeR,KAAKS,IAAL,MAAAT,KAAI,YAAQM,IAEjC,OACE,qBAAKtC,UAAU,QAAf,SACGqC,EAAYf,KAAI,SAAAX,GAAK,OACpB,cAAC,EAAD,CAEER,MAAOQ,EAAMR,MACb0B,SAAUW,EACVV,MAAOnB,EAAMmB,OAHRnB,EAAMmB,aCeNY,EAxBO,SAAC,GAAkB,IAAD,EAAfC,EAAe,EAAfA,SACjBC,EAAmB,CACvB,CAAEd,MAAO,MAAO3B,MAAO,GACvB,CAAE2B,MAAO,MAAO3B,MAAO,GACvB,CAAE2B,MAAO,MAAO3B,MAAO,GACvB,CAAE2B,MAAO,MAAO3B,MAAO,GACvB,CAAE2B,MAAO,MAAO3B,MAAO,GACvB,CAAE2B,MAAO,MAAO3B,MAAO,GACvB,CAAE2B,MAAO,MAAO3B,MAAO,GACvB,CAAE2B,MAAO,MAAO3B,MAAO,GACvB,CAAE2B,MAAO,MAAO3B,MAAO,GACvB,CAAE2B,MAAO,MAAO3B,MAAO,GACvB,CAAE2B,MAAO,MAAO3B,MAAO,GACvB,CAAE2B,MAAO,MAAO3B,MAAO,IAba,cAgBhBwC,GAhBgB,IAgBtC,2BAAgC,CAAC,IAAtBpB,EAAqB,QAE9BqB,EADcrB,EAAQE,KAAKoB,YACH1C,OAASoB,EAAQG,QAlBL,8BAqBtC,OAAO,cAAC,EAAD,CAAOW,YAAaO,KCMdE,EAvBE,SAAA/C,GACf,MAAwCgD,mBAAS,QAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAKMC,EAAmBnD,EAAMqB,MAAM+B,QAAO,SAAA5B,GAC1C,OAAOA,EAAQE,KAAKV,cAAcqC,aAAeJ,KAGnD,OACE,qCACE,cAAC,EAAD,CAAgB5C,SAAU4C,EAAczC,eAVvB,SAAAO,GACnBmC,EAAgBnC,MAUd,oBAAId,UAAU,wEAAd,SACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAe2C,SAAUO,IACzB,cAAC,EAAD,CAAc9B,MAAO8B,a,OC2DhBG,EAhFK,SAAAtD,GAClB,MAAwCgD,mBAAS,IAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAA0CR,mBAAS,IAAnD,mBAAOS,EAAP,KAAsBC,EAAtB,KACA,EAAsCV,mBAAS,IAA/C,mBAAOW,EAAP,KAAoBC,EAApB,KAwBA,OACE,uBAAM3D,UAAU,oBAAoB4D,SAfhB,SAAAtD,GACpBA,EAAMuD,iBAEN,IAAMC,EAAc,CAClBtC,MAAO8B,EACP5B,OAAQ8B,EACR/B,KAAM,IAAIsC,KAAKL,IAGjB3D,EAAMiE,kBAAkBF,GACxBP,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,KAGf,UACE,2BAAU3D,UAAU,wBAApB,UACE,sBAAKA,UAAU,gDAAf,UACE,0CACA,uBACEiE,KAAK,OACLjE,UAAU,gDACVG,MAAOmD,EACPjD,SAhCiB,SAAAC,GACzBiD,EAAgBjD,EAAME,OAAOL,aAkCzB,sBAAKH,UAAU,gDAAf,UACE,2CACA,uBACEiE,KAAK,SACLC,IAAI,OACJC,KAAK,OACLnE,UAAU,eACVG,MAAOqD,EACPnD,SAxCkB,SAAAC,GAC1BmD,EAAiBnD,EAAME,OAAOL,aA0C1B,sBAAKH,UAAU,gDAAf,UACE,yCACA,uBACEiE,KAAK,OACLC,IAAI,aACJC,KAAK,aACLnE,UAAU,eACVG,MAAOuD,EACPrD,SAhDgB,SAAAC,GACxBqD,EAAerD,EAAME,OAAOL,gBAmD1B,sBAAKH,UAAU,4EAAf,UACE,wBACEoE,QAASrE,EAAMsE,SACfrE,UAAU,oEAFZ,oBAMA,wBACEiE,KAAK,SACLjE,UAAU,oEAFZ,gCClCOsE,EAjCI,SAAAvE,GACjB,IASA,EAA4BgD,oBAAS,GAArC,mBAAOwB,EAAP,KAAeC,EAAf,KAOA,OACE,sBAAKxE,UAAU,kBAAf,WACIuE,GACA,wBACEH,QAVe,WACrBI,GAAU,IAUJH,SARmB,WACzBG,GAAU,IAQJxE,UAAU,gEAHZ,6BAQDuE,GAAU,cAAC,EAAD,CAAaP,kBA3BD,SAAAS,GACzB,IAAMC,EAAW,2BACZD,GADY,IAEf9C,GAAIK,KAAK2C,SAASvB,aAEpBrD,EAAM6E,aAAaF,GACnBF,GAAU,UCLRK,EAAmB,CACvB,CACElD,GAAI,KACJH,MAAO,MACPE,OAAQ,IACRD,KAAM,IAAIsC,KAAK,KAAM,EAAG,KAkBbe,MAff,WACE,MAAgC/B,mBAAS8B,GAAzC,mBAAOlC,EAAP,KAAiBoC,EAAjB,KAMA,OACE,sBAAK/E,UAAU,oGAAf,UACE,cAAC,EAAD,CAAY4E,aAPU,SAAArD,GACxBwD,GAAY,SAACC,GACX,MAAM,CAAEzD,GAAR,mBAAoByD,UAMpB,cAAC,EAAD,CAAU5D,MAAOuB,QCnBvBsC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4ceddc22.chunk.js","sourcesContent":["function Card(props) {\r\n    return(\r\n        <div className={\"card \" + props.className}>{props.children}</div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","const ExpensesFilter = props => {\r\n  const dropdownChangeHandler = event => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control flex justify-around\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","function ExpenseDate({expenseDate}) {\r\n  const month = expenseDate.toLocaleString('en-US', { month: 'short' });\r\n  const day = expenseDate.toLocaleString('en-US', { day: '2-digit' });\r\n  const year = expenseDate.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-item__date p-2\">\r\n      <div>{month}</div>\r\n      <div>{day}</div>\r\n      <div>{year}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nfunction ExpenseItem({ expenseDate, expenseTitle, expenseAmount }) {\r\n  // const expenseDate = new Date(2021, 2, 28);\r\n  // const expenseTitle = 'Car';\r\n  // const expenseAmount = 1000;\r\n\r\n  return (\r\n    <Card className=\"expense-item container flex text-center p-3 mt-8 items-center bg-white text-gray-800 border border-gray-300 shadow-inner rounded\">\r\n      <ExpenseDate expenseDate={expenseDate} />\r\n      <div className=\"expense-item__desc container flex justify-around p-3\">\r\n        <h2>{expenseTitle}</h2>\r\n        <div className=\"expense-item__price p-2\">${expenseAmount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\nexport default ExpenseItem;\r\n","import ExpenseItem from './ExpenseItem';\r\n\r\nconst ExpensesList = props => {\r\n  if (props.items.length === 0) {\r\n    return <p>No expenses found.</p>;\r\n  }\r\n\r\n  return (\r\n    <ul>\r\n      {props.items.map(expense => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          expenseTitle={expense.title}\r\n          expenseDate={expense.date}\r\n          expenseAmount={expense.amount}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import './ChartBar.css';\r\nconst ChartBar = ({ value, maxValue, label }) => {\r\n  let barFillHeight = '0%';\r\n  if (maxValue > 0) {\r\n    barFillHeight = Math.round((value / maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import './Chart.css';\r\nimport ChartBar from './ChartBar';\r\n\r\nconst Chart = ({ monthPoints }) => {\r\n  const dataPointValues = monthPoints.map(monthPoint => monthPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {monthPoints.map(month => (\r\n        <ChartBar\r\n          key={month.label}\r\n          value={month.value}\r\n          maxValue={totalMaximum}\r\n          label={month.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = ({ expenses }) => {\r\n  const chartMonthPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of expenses) {\r\n    const month = expense.date.getMonth();\r\n    chartMonthPoints[month].value += expense.amount;\r\n  }\r\n\r\n  return <Chart monthPoints={chartMonthPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import { useState } from 'react';\r\n\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\nconst Expenses = props => {\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n  const selectedYear = year => {\r\n    setFilteredYear(year);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ExpensesFilter selected={filteredYear} onChangeFilter={selectedYear} />\r\n      <li className=\"container expenses-list p-2 flex flex-col justify-center aling-center\">\r\n        <Card>\r\n          <ExpensesChart expenses={filteredExpenses} />\r\n          <ExpensesList items={filteredExpenses} />\r\n        </Card>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import { useState } from 'react';\r\nconst ExpenseForm = props => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n  const titleChangeHandler = event => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n  const amountChangeHandler = event => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n  const dateChangeHandler = event => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n  const submitHandler = event => {\r\n    event.preventDefault();\r\n\r\n    const extanseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseDate(extanseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n  return (\r\n    <form className=\"flex items-center\" onSubmit={submitHandler}>\r\n      <fieldset className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control p-3 flex justify-between\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"md:bg-gray-200 md:focus:bg-white ml-5 rounded\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control p-3 flex justify-between\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            className=\"ml-5 rounded\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control p-3 flex justify-between\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            step=\"2022-12-31\"\r\n            className=\"ml-5 rounded\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </fieldset>\r\n      <div className=\"new-expense__actions p-3 text-center flex justify-center flex-col-reverse\">\r\n        <button\r\n          onClick={props.onCancel}\r\n          className=\"md:bg-gray-500 md:hover:bg-gray-700 text-gray-100 p-2 m-3 rounded\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"md:bg-gray-500 md:hover:bg-gray-700 text-gray-100 p-2 m-3 rounded\"\r\n        >\r\n          Add expense\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import { useState } from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nconst NewExpense = props => {\r\n  const saveExpDataHandelr = enteredData => {\r\n    const expenseData = {\r\n      ...enteredData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const editingHandler = () => {\r\n    setIsEdit(true);\r\n  };\r\n  const stopEditingHandler = () => {\r\n    setIsEdit(false);\r\n  }\r\n  return (\r\n    <div className=\"new-expense p-5\">\r\n      {!isEdit && (\r\n        <button\r\n          onClick={editingHandler}\r\n          onCancel={stopEditingHandler}\r\n          className=\"md:bg-gray-500 md:hover:bg-gray-700 text-gray-100 p-2 rounded\"\r\n        >\r\n          Add New Expense\r\n        </button>\r\n      )}\r\n      {isEdit && <ExpenseForm onSaveExpenseDate={saveExpDataHandelr} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from 'react';\nimport './App.css';\n//import ExpenseItem from './components/ExpenseItem';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\nconst INITIAL_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Car',\n    amount: 1000,\n    date: new Date(2019, 1, 1),\n  },\n];\nfunction App() {\n  const [expenses, setExpenses] = useState(INITIAL_EXPENSES);\n  const addExpenseHandler = expense => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n  return (\n    <div className=\"conteiner max-w-screen-xl bg-gray-100 flex flex-col justify-center items-center p-10 m-10 rounded\">\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}